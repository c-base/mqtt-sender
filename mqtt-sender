#!/usr/bin/lua5.1
-- vim: ts=2 sw=2 ai
-- ------------------------------------------------------------------------- --
-- mqtt client v0.1 2014-12-25, mm@c-base.org
-- ------------------------------------------------------------------------- --
package.path = '/usr/share/mqtt-sender/?/init.lua;/usr/share/mqtt-sender/?.lua;/etc/mqtt-sender/?.lua;/etc/mqtt-sender/modules/?.lua;' .. package.path
require "daemon"
local socket = require "socket"
local MQTT = require("mqtt")

function file_exists(name)
   local f=io.open(name,"r")
   if f~=nil then io.close(f) return true else return false end
end

hostname = ""
if (file_exists("/bin/hostname")) then
	local pipe = io.popen("/bin/hostname -s")
	hostname = pipe:read("*line")
	pipe:close()
else
	require "luci.json"
	local pipe = io.popen("uci get system.@system[0].hostname")
	hostname = pipe:read("*line")
	pipe:close()
end

local id = "mqtt_send_" .. hostname

-- holds modules that publish topic
topics = {}
-- holds modules that subscribe to topics and react to messages
subscriptions = {}

require "config"

local mqtt
if presence then
	mqtt = MQTT.client{
  	uri = server .. ":" .. port,
		clean = true,
		will = { topic = presence, payload = "offline", retain = true }
	}
else
	mqtt = MQTT.client{
  	uri = server .. ":" .. port,
		clean = true,
	}
end


daemon("/run/mqtt-sender.pid")

log("INFO","starting")
while (1) do
  local error_message = nil
	local stats = nil
    
-- make sure that we are connected and are subscribed to our topics
-- before we call the handler()-method in every loop.
	if not mqtt.connection then
		if mqtt:_open_connection() then
			if not mqtt:_send_connect() then
				mqtt:close_connection()
			else
				if presence then
					mqtt:publish{ topic = presence, payload = "online", retain = true }
				end
        log("INFO","connected")
			end
		end
	end

-- Now we are sure that we are connected
	process(mqtt,prefix,topics)
  socket.sleep(1)

end -- end while
